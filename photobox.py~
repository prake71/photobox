#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""photobox - a photobox application
  
photobox is a application mainly written for use in combination with 
a Raspberry Pi Single Board Computer and a camera. 

"""

import pygame
import pygame.camera

# initialize pygame engine
pygame.init()
# to be on the save side, init camera in addition
pygame.camera.init()

# define some color constants, just for the case
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0 ,0)

size = (640, 480)
screen = pygame.display.set_mode(size)

pygame.display.set_caption("Photobox")

# Schleife und somit Spiel verlassen?
done = False

# Ein Timer, um die Geschwindigkeit des Spiels zu regulieren
clock = pygame.time.Clock()

# Kamera initialisieren
clist = pygame.camera.list_cameras()
print(clist)
if not clist:
    raise ValueError("Sorry, no cameras detected.")
cam = pygame.camera.Camera(clist[0], size)
cam.start()

snapshot = pygame.surface.Surface(size, 0, screen)


# -------------- Spielschleife ----------------
while not done:
   # --- Event Loop
   for event in pygame.event.get():
    # wenn Fenster geschlossen wird, dann done auf wahr setzen
       if event.type == pygame.QUIT:
           done = True

   # --- Spielelogik
   if cam.query_image():
       snapshot = cam.get_image(snapshot)

   # --- Bildschirm löschen
   #screen.fill(WHITE)

   # --- Objekte zeichnen
   screen.blit(snapshot, (0,0))

   # --- aktualisierten Bildschirm auffrischen / anzeigen
   pygame.display.flip()

   # --- das Bild soll maximal 60x pro Sekunde aktualisiert werden
   clock.tick(60)

   # --- Anzeige Rahmentext und Bildwiederholungsrate des Spiels
   pygame.display.set_caption("Photobox (fps: %.2f)" % (clock.get_fps()))

# Fenster schließen und Spiel verlassen
pygame.quit()

